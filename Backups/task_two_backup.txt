import urllib.parse
import boto3

s3 = boto3.client('s3')
s3_res = boto3.resource('s3')

def lambda_handler(event, context):
    # Get the object from the event and show its content type
    try:
        bucket = event['Records'][0]['s3']['bucket']['name']
        key = urllib.parse.unquote_plus(event['Records'][0]['s3']['object']['key'], encoding='utf-8')
    except Exception as e:
        print(e)
        print('Error retreiving the bucket name and file name from the request!')
        raise e
    
    try:
        # hardcoded the location to the distribution list (this can be put anywhere you want)
        response = s3.get_object(Bucket='sbajwa05-test-two', Key='distribution-list.txt')
        file = response['Body'].read().decode('utf-8').split("\r\n")
        
        # create a unique name for a bucket associated with each name within the distribution list and put the object into that users bucket
        # you probably first want to verify if the bucket exists before you attempt to create a bucket
        for name in file:
            print(name)
            bucket_name = "cis4010-a4-task-two-sbajwa05-" + name.lower()
            if s3_res.Bucket(bucket_name) in s3_res.buckets.all():
                s3.put_object(Bucket=bucket_name, Key=key)
            else:
                s3.create_bucket(Bucket=bucket_name, CreateBucketConfiguration={'LocationConstraint': 'ca-central-1'})
                s3.put_object(Bucket=bucket_name, Key=key)
                
        response['ContentType']
    except Exception as e:
        print(e)
        print('Error getting object {} from bucket {}. Make sure they exist and your bucket is in the same region as this function.'.format(key, bucket))
        raise e
              